# SpotHood App

## Pré-Requisitos
Caso queira rodar localmente:
- nodejs & npm
- django & django-cors-headers

Caso queira rodar em container:
- docker & docker-compose
- make (opcional)

Faça o download da aplicação, e caminhe até o diretório `app`
> git clone https://github.com/UnBArqDsw2022-2/2022.2_G3_SpotHood.git
<br>cd 2022.2_G3_SpotHood/app

<hr>

## Localmente
Abra duas abas no terminal, ambos no diretório app.

### Backend
Em app, caminhe para o diretório backend

> cd backend

E execute o comando

> python manage.py runserver 0.0.0.0:8000

Talvez você terá que dar permissão para o React acessar o Host do backend, você pode configurar a permissão com o [Django Cors Headers](https://pypi.org/project/django-cors-headers/)

```
ALLOWED_HOSTS = ['0.0.0.0'] # this is the host that Docker uses to run application
INSTALLED_APPS = [
    'corsheaders' # this will be installed later
]
...
# this should be put at the end of the settings.py file
CORS_ORIGIN_WHITELIST = [
     'http://localhost:3000'
]
You also need to add a middleware class to listen in on responses:

MIDDLEWARE = [
    ...,
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    ...,
]
```

### Frontend
Em app, caminhe para o diretório frontend

> cd frontend

Faça o download das dependências usando:

> npm install

Agora você poderá executar o front end com:

> npm start

<hr>

## Container

Após isso você poderá construir a aplicação utilizando

> make build

ou

> docker-compose build

Este processo irá demorar um tempo, e será abortado no processo de `RUN npm audit fix --force` não se preocupe, ele já construiu a aplicação, e agora você poderá rodar ela com o seguinte comando

> make up

ou

> docker-compose up --remove-orphans --force-recreate --always-recreate-deps

Dentro de alguns instantes a aplicação estará rodando e você poderá acessar o back na porta [8000](http://localhost:8000) e o front na [3000](http://localhost:3000). E após rodar você poderá apagar os containers executando

> make down

ou

> docker-compose down --volumes
